//210119

// NullSafety

// - Null 에 대해서 안전하다
// - 코틀린의 특징이다

// Null vs 0
// - 0 : 휴지를 다 쓰고 휴지심만 남은 상태
// - Null : 휴지심도 없는 상태, 아예 존재하지 않는 상태, 모르는 상태

// Null 안전하지 않은 이유
// - 0 + 10 = 10
// - Null + 10 = ? : 에러
// - button.setOnClickListener{}
// - null.setOnClickListener{} 불가능 : null 이 무엇인지 모르기 때문에 (에러)
// - NullPointExceptionError 발생


// - if(number != null) { number + 10 }
// - if(button != null) { button.setOnClickListener{}}

// 코틀린이 NullSafety 하기 위해서 사용하는 문법
// - ? : Null 아니라면 이하구문 실행
// - !! : Null 아님을 개발자가 보장함
// - 사용법
//   : button?.setOnClickListener -> ? 앞에 있는게(button) Null 아니라면 setOnClickListener 실행하겠다
//   : button!!.setOnCLickListener -> button 절대 Null 아닐때 (100% 확신)

// Null 될수 있는 타입
// - Int, Float, Double, Class : Null 될 수 없는 타입
// - Int?, Float?, Double? , Class? : Null 될 수 있는 타입